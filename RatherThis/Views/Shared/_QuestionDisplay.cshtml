@model RatherThis.Models.QuestionDisplayViewModel

@if (Model != null)
{
    var genderTag = "FOR ALL";

    if (Model.Gender == "F")
    {
        genderTag = "FOR THE LADIES";
    }
    else if (Model.Gender == "M")
    {
        genderTag = "FOR THE GUYS";
    }
    var optionInputId1 = string.Format("question-{0}-option-{1}", Model.QuestionId, @Model.OptionId1);
    var optionInputId2 = string.Format("question-{0}-option-{1}", Model.QuestionId, @Model.OptionId2);
    var questionContainerId = string.Format("question-container-{0}", Model.QuestionId);
    var ajaxLoaderId = "question-ajax-loading-" + Model.QuestionId;
    var notLoggedInClass = Model.IsLoggedIn ? "" : "not-logged-in";
    
    <div class="question-display @notLoggedInClass">
    @using (Ajax.BeginForm("Answer", "Question", new { qid = Model.QuestionId }, new AjaxOptions
            {
                UpdateTargetId = questionContainerId,
                InsertionMode = InsertionMode.Replace,
                LoadingElementId = ajaxLoaderId
            }))
    {
        
        <p class="question-date">@Model.Date.ToString("MMM dd yyyy").ToUpper()</p>
        <p class="gender-tag @Model.Gender">@genderTag</p>
        <h1 class="question">would you rather...</h1>
    
        <div class="option-container">
            
            <input type="radio" name="oid" value="@Model.OptionId1" id="@optionInputId1" />
            <label class="option-text" for="@optionInputId1" >@Model.OptionText1?</label>
        </div>
        <div class="option-container">
            <input type="radio" name="oid" value="@Model.OptionId2" id="@optionInputId2" />
            <label class="option-text" for="@optionInputId2">@Model.OptionText2?</label>
        </div>
        <div class="clear"></div>
        
        
        @* display the vote button if user is logged in, otherwise show a call to action link to register or login *@
        if (Model.IsLoggedIn)
        {
        <input class="btn-question-action vote" type="submit" value="VOTE" />
        }
    }
    @* only display the skip button if user is logged in *@
    @if (Model.IsLoggedIn)
    {
        using (Ajax.BeginForm("Answer", "Question", new { qid = Model.QuestionId }, new AjaxOptions
        {
            UpdateTargetId = questionContainerId,
            InsertionMode = InsertionMode.Replace,
            LoadingElementId = ajaxLoaderId
        }, new { @class = "skip-form" }))
        {
            @* 0 is the value for any questions answered by skipping *@
            <input type="hidden" name="oid" value="0" />
            <input class="btn-question-action skip" type="submit" value="SKIP" />
        }
    }
    <p class="ask-name">asked by: <span class="@Model.QuestionUserGender">@Model.Name</span></p>

    @if (!Model.IsLoggedIn)
    {
        <text><p class="login-action-message">Please <a href="#login" onclick="activateLogin()">LOGIN</a> or <a href="#registration" onclick="activateRegistration()">REGISTER</a> to Answer</p></text>   
    }
    </div>
}